!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Cephalopod=e():t.Cephalopod=e()}(window,function(){return function(t){var e={};function o(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=t,o.c=e,o.d=function(t,e,i){o.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:i})},o.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=2)}([function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class i{constructor(t,e){this.isOwner=!1,this.sizeof=i.sizeof,this.state=new Int32Array(t,e,1)}init(){if(this.isOwner)throw new Error("Mutex in use, cannot initialize");this.state[0]=0}lock(){if(this.isOwner)throw new Error("Thread tried to lock mutex twice");for(;;){if(0==Atomics.compareExchange(this.state,0,0,1))return void(this.isOwner=!0);Atomics.wait(this.state,0,1)}}unlock(){if(!this.isOwner)throw new Error("Attempt to unlock mutex that is not owned by thread");this.isOwner=!1,Atomics.store(this.state,0,0),Atomics.wake(this.state,0,1)}tryLock(){if(this.isOwner)throw new Error("Thread tried to lock mutex twice");return 0==Atomics.compareExchange(this.state,0,0,1)}}i.sizeof=4,e.Mutex=i},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const i=o(0);class r{constructor(t,e){this.sizeof=i.Mutex.sizeof+4,this.counter=new Int32Array(t,e,1),this.mutex=new i.Mutex(t,e+4)}init(t){this.counter[0]=t}wait(){for(this.mutex.lock(),this.counter[0]-=1;;){if(this.counter[0]>=0)return void this.mutex.unlock();const t=this.counter[0];this.mutex.unlock(),Atomics.wait(this.counter,0,t),this.mutex.lock()}}tryWait(){this.mutex.lock();const t=this.counter[0]>0;return t&&this.counter[0]--,this.mutex.unlock(),t}post(){this.mutex.lock(),this.counter[0]++,this.mutex.unlock(),Atomics.wake(this.counter,0,1)}}r.sizeof=i.Mutex.sizeof+4,e.Semaphore=r},function(t,e,o){"use strict";function i(t){for(var o in t)e.hasOwnProperty(o)||(e[o]=t[o])}Object.defineProperty(e,"__esModule",{value:!0}),i(o(0)),i(o(1))}])});